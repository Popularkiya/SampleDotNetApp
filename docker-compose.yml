services:
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - 17523:15672

  flowerbackend:
    container_name: flowerbackend
    build:
      context: ./flowerbackend
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mongodb
    restart: unless-stopped
    environment:
      QUEUE_NAME: my-queue
      TEMP_QUEUE: temp-queue
      HUMIDITY_QUEUE: humidity-queue
      UV_QUEUE: uv-queue
      CO2_QUEUE: co2-queue
      AMQP_URL: "amqp://guest:guest@rabbitmq"
      TEMP_COLLECTION: Temperature
      HUMIDITY_COLLECTIONE: Humidity
      UV_COLLECTION: Ultraviolet
      CO2_COLLECTION: CarbonDioxide
    ports:
      - 17524:80

  rabbitmq-producer:
    container_name: rabbitmq-producer
    build:
      context: ./rabbitmq-producer
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    restart: unless-stopped
    environment:
      QUEUE_NAME: my-queue
      TEMP_QUEUE: temp-queue
      HUMIDITY_QUEUE: humidity-queue
      UV_QUEUE: uv-queue
      CO2_QUEUE: co2-queue
      AMQP_URL: "amqp://guest:guest@rabbitmq"
    ports:
      - 17525:3000

  flower-web-app:
    container_name: flowerfrontend
    build:
      context: ./flower-web-app
      dockerfile: Dockerfile
    ports:
      - 17526:4000
    stdin_open: true
    tty: true

  mongodb:
    image : mongo
    container_name: mongodb
    ports:
      - 27017:27017
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: student
      # MONGO_INITDB_DATABASE: SI_175237
    volumes:
      - ./init-mongodb/initDb.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
